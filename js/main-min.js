"use strict"; var _createClass = function () { function e(e, t) { for (var n = 0; n < t.length; n++) { var o = t[n]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o) } } return function (t, n, o) { return n && e(t.prototype, n), o && e(t, o), t } }(); function _classCallCheck(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } var APPLICATION_ID = localStorage.getItem("_hereAppId"), APPLICATION_CODE = localStorage.getItem("_hereAppCode"), OPENWEATHERMAP_APPID = localStorage.getItem("_openWeatherMapAppId"); function insertSuggestionToTextbox(e) { $(".suggestions").remove(), $("#mainInput").val(e), $("#mainInput").focus() } function createAndAppendAutoCompleteElements(e) { if ($(".suggestions").remove(), e) { var t = 0, n = e.map((function (e) { return '<div class="suggestions" id=' + (t += 1) + " countrycode=" + e.countryCode + ' tabindex="0"> ' + e.label + " </div>" })); $("#autocomplete").append(n) } else $("suggestions").remove() } function displayNotification(e) { e && "" !== e && ($("#modal").html('<div id="notifier"><span>' + e + '</span><button id="close-notifier" class="button">Ok</button></div>'), $("#modal").show(), setTimeout((function () { $("#modal").hide() }), 3e3)) } $(".nav_handle-container").click((function () { $(".toggled").is(":visible") ? $(".toggled").hide(200) : $(".toggled").show(200) })); var AUTOCOMPLETION_URL = "https://autocomplete.geocoder.api.here.com/6.2/suggest.json"; function fetchGeoCodingInfoSuccessCallback(e) { if (!e || "ApplicationError" === e.type) throw new Error("Error fetching geocoding information: " + e.type + " "); var t = {}, n = e.Response.View[0].Result; return (void 0 === n ? "Oops! No coordinates for this location" : n).forEach((function (e) { var n = e.Location.NavigationPosition[0], o = n.Latitude, i = void 0 === o ? "Oops! No coordinates for this location" : o, r = n.Longitude, a = void 0 === r ? "Oops! No coordinates for this location" : r; t.Latitude = i, t.Longitude = a })), t } function getGeoCodingInfoOfSearchedPlace(e) { if (!e) throw new Error("Error fetching geocoding information: Invalid value passed as parameter!"); var t = encodeURIComponent(e); return fetch("https://geocoder.api.here.com/6.2/geocode.json" + ("?app_id=" + APPLICATION_ID + "&app_code=" + APPLICATION_CODE + "&searchtext=" + t)).then((function (e) { return e.json() })).then((function (e) { return fetchGeoCodingInfoSuccessCallback(e) })).catch((function (e) { throw new Error("Error fetching geocoding information: " + e + " ") })) } function getWeatherInfoOfSearchedPlaceSuccessCallback(e) { if (200 !== e.cod) throw new Error("Error fetching weather information: " + e.type + " "); var t = {}, n = e.coord, o = void 0 === n ? {} : n, i = e.weather, r = void 0 === i ? [] : i, a = e.main, c = void 0 === a ? {} : a, u = e.wind, s = void 0 === u ? {} : u; t.geoCoordinates = o, r.forEach((function (e) { var n = e.description, o = void 0 === n ? "Main weather not found." : n, i = e.icon; t.currentWeather = o, t.icon = i })); var d = c.humidity, l = void 0 === d ? "Humidity not found." : d, h = c.temp, p = void 0 === h ? "Temperature not found." : h; t.humidity = l, t.temperature = p; var m = s.speed, f = void 0 === m ? "Wind speed not found." : m, g = s.deg, v = void 0 === g ? "Wind direction not found." : g; return t.windSpeed = f, t.windDirection = v, t } function getWeatherInfoOfSearchedPlace(e, t) { if (!e || !t) return new Error("Error fetching weather information. Invalid parameters!"); var n = e.Latitude, o = e.Longitude; return fetch("https://api.openweathermap.org/data/2.5/weather" + ("?lat=" + n + "&lon=" + o + "&appid=" + OPENWEATHERMAP_APPID + "&units=" + ("celsius" === t ? "metric" : "imperial"))).then((function (e) { return e.json() })).then((function (e) { return getWeatherInfoOfSearchedPlaceSuccessCallback(e) })).catch((function (e) { return new Error("Error fetching weather information: " + e + " ") })) } function getLandmarksAroundSearchedPlaceSuccessCallBack(e, t) { if (!e || "ApplicationError" === e.type || !t) return new Error("Error fetching landmarks: " + e.type); var n = []; return e.Response.View[0].Result.forEach((function (e) { var t = {}, o = e.Location, i = o.LocationType, r = void 0 === i ? "Nothing here." : i, a = o.Name, c = void 0 === a ? "Nothing here" : a, u = o.DisplayPosition, s = void 0 === u ? "Nothing here." : u, d = o.Address, l = d.Label, h = void 0 === l ? "Nothing here." : l, p = d.Country, m = void 0 === p ? "Nothing here" : p, f = d.State, g = void 0 === f ? "Nothing here" : f, v = d.City, $ = void 0 === v ? "Nothing here" : v; t.locationType = r, t.name = c, t.displayPosition = s, t.label = h, t.country = m, t.state = g, t.city = $, n.push(t) })), { Landmarks: n, mainGeoCoord: t } } function getLandmarksAroundSearchedPlace(e) { if (!e) return new Error("Error fetching landmarks: " + e); var t = e.lat, n = void 0 === t ? "" : t, o = e.lon; return fetch("https://reverse.geocoder.api.here.com/6.2/reversegeocode.json" + ("?app_id=" + APPLICATION_ID + "&app_code=" + APPLICATION_CODE + "&mode=retrieveLandmarks&prox=" + n + "," + (void 0 === o ? "" : o) + ",3000")).then((function (e) { return e.json() })).then((function (t) { return getLandmarksAroundSearchedPlaceSuccessCallBack(t, e) })).catch((function () { return displayNotification("No landmarks found for this location!"), { Landmarks: [], mainGeoCoord: e } })) } function initMap(e) { if (e) { var t = e.Landmarks, n = e.mainGeoCoord, o = $("#name-of-place").text(), i = "minImages/flag-red.png", r = "minImages/flag-blue.png", a = { lat: n.lat, lng: n.lon }, c = new google.maps.Map(document.getElementById("map"), { zoom: 11, center: a }), u = new google.maps.Marker({ position: a, animation: google.maps.Animation.BOUNCE, icon: i, map: c, title: o }); google.maps.event.addListener(u, "click", (function () { })), t.forEach((function (e) { var t = e.displayPosition, n = t.Latitude, o = t.Longitude, i = e.name; !function (e, t) { function n(e, t) { $("#modal").hide(), "OK" !== t && displayNotification("No photo here!"); try { var n = e[0], o = n.photos, i = void 0 === o ? "No Photos" : o, r = n.name, a = void 0 === r ? "No name" : r, c = i.map((function (e) { var t = e.getUrl(); return '\n            <div id="landmark">\n          <div>' + a + '</div>\n          <img src="' + t + '" alt="' + a + '">\n          <button class="button btn-close">Close</button>\n          </div>\n          ' })); $("#modal").html(c), $("#modal").show() } catch (e) { displayNotification("No photo here!") } } var o = { query: "" + t, fields: ["name", "photos"] }; google.maps.event.addListener(e, "click", (function () { $("#modal").html('<div id="preloader"><img src="minImages/Spinner-1s-200px.gif"></div>'), $("#modal").show(), new google.maps.places.PlacesService(c).findPlaceFromQuery(o, n) })) }(new google.maps.Marker({ position: { lat: n, lng: o }, animation: google.maps.Animation.DROP, icon: r, map: c, title: i }), i) })) } } $(document).on("click", "#1", (function () { insertSuggestionToTextbox($("#1").text()) })), $(document).on("click", "#2", (function () { insertSuggestionToTextbox($("#2").text()) })), $(document).on("click", "#3", (function () { insertSuggestionToTextbox($("#3").text()) })), $(document).on("click", "#4", (function () { insertSuggestionToTextbox($("#4").text()) })), $(document).on("click", "#5", (function () { insertSuggestionToTextbox($("#5").text()) })), $(document).on("keyup", "#1", (function (e) { 13 !== e.which && 32 !== e.which || insertSuggestionToTextbox($("#1").text()) })), $(document).on("keyup", "#2", (function (e) { 13 !== e.which && 32 !== e.which || insertSuggestionToTextbox($("#2").text()) })), $(document).on("keyup", "#3", (function (e) { 13 !== e.which && 32 !== e.which || insertSuggestionToTextbox($("#3").text()) })), $(document).on("keyup", "#4", (function (e) { 13 !== e.which && 32 !== e.which || insertSuggestionToTextbox($("#4").text()) })), $(document).on("keyup", "#5", (function (e) { 13 !== e.which && 32 !== e.which || insertSuggestionToTextbox($("#5").text()) })), $(".autocomplete").keyup((function (e) { if (27 !== e.which) { var t = $(".autocomplete").val(), n = "?query=\n  " + encodeURIComponent(t) + "\n  &beginHighlight=\n  " + encodeURIComponent("<mark>") + "\n  &endHighlight=\n  " + encodeURIComponent("</mark>") + "\n  &maxresults=5&app_id=" + APPLICATION_ID + "\n  &app_code=" + APPLICATION_CODE; fetch(AUTOCOMPLETION_URL + n).then((function (e) { return e.json() })).then((function (e) { createAndAppendAutoCompleteElements(e.suggestions) })).catch((function (e) { return e })) } else $(".suggestions").remove() })); var TemperatureConverter = function () { function e() { _classCallCheck(this, e) } return _createClass(e, null, [{ key: "getCurrentMetricSystem", value: function () { return localStorage.getItem("_currMetricSystem") } }, { key: "setCurrentMetricSystem", value: function (e) { try { localStorage.setItem("_currMetricSystem", e) } catch (e) { } } }, { key: "convertTo", value: function (e) { var t = this; this.getCurrentMetricSystem() !== e && getGeoCodingInfoOfSearchedPlace($("#name-of-place").text()).then((function (t) { return getWeatherInfoOfSearchedPlace({ Latitude: t.Latitude, Longitude: t.Longitude }, e) })).then((function (n) { t.setCurrentMetricSystem(e); var o = void 0; "celsius" === e ? (o = "C", $("#celsius-button").prop("checked", !0), $("#fahrenheit-button").prop("checked", !1)) : (o = "F", $("#fahrenheit-button").prop("checked", !0), $("#celsius-button").prop("checked", !1)); var i = n.temperature, r = void 0 === i ? "Nothing here" : i; $("#temperature").html(r + "&deg;" + o) })).catch((function (e) { return e })) } }]), e }(); function parseWindDirection(e) { if (e < 0 || e > 360) return "Invalid direction"; var t = "north"; return e >= 90 && e < 180 ? t = "east" : e >= 180 && e < 270 ? t = "south" : e >= 270 && e < 360 && (t = "west"), t } function fetchAll(e) { getGeoCodingInfoOfSearchedPlace(e).then((function (e) { return getWeatherInfoOfSearchedPlace({ Latitude: e.Latitude, Longitude: e.Longitude }, TemperatureConverter.getCurrentMetricSystem() || "celsius") })).then((function (t) { var n = TemperatureConverter.getCurrentMetricSystem() || "celsius", o = "celsius" === n ? "C" : "F", i = t.humidity, r = void 0 === i ? "Nothing here" : i, a = t.geoCoordinates, c = void 0 === a ? "Nothing here" : a, u = t.windSpeed, s = void 0 === u ? "Nothing here" : u, d = t.icon, l = void 0 === d ? " " : d, h = t.windDirection, p = void 0 === h ? "Nothing here" : h, m = t.currentWeather, f = void 0 === m ? "Nothing here" : m, g = t.temperature, v = void 0 === g ? "Nothing here" : g, I = parseWindDirection(p), y = "https://openweathermap.org/img/wn/" + l + "@2x.png"; return $("#name-of-place").text(e), $("#humidity").text(r + "%"), $("#weather").text(f), $("#weather-icon").html('\n          <img src="' + y + '" alt="' + f + '">\n\n        '), $("#windspeed").text(s + "knots"), $("#windDirection").text(I), $("#" + n + "-button").attr("checked", "checked"), $("#temperature").html(v + "&deg;" + o), $("#search-results").show(), $("#search-section").hide(), $(".welcome").hide(), getLandmarksAroundSearchedPlace(c) })).then((function (e) { initMap(e), $("#modal").hide() })).catch((function () { $("#modal").hide(), displayNotification("\n      Could not get information about the place you searched for.\n      Please add more details like the city and country and try again.\n      "), $("#mainInput").focus(), $(".suggestions").remove(), $("#search-section").show(), $("#search-results").hide() })) } $(document).on("click", "#celsius-button", (function () { TemperatureConverter.convertTo("celsius") })), $(document).on("click", "#fahrenheit-button", (function () { TemperatureConverter.convertTo("fahrenheit") })), $("#submit-button").click((function (e) { e.preventDefault(); var t = $("#mainInput").val(); if ($("#mainInput").val(""), $(".suggestions").remove(), !t) { if ($("#mainInput").focus(), $(".input-error").is(":visible")) return; return $("#autocomplete").append('<div class="input-error"> Please type in a name of a place! </div>'), void setTimeout((function () { $(".input-error").remove() }), 3e3) } $("#modal").html('<div id="preloader"><img src="minImages/Spinner-1s-200px.gif"></div>'), $("#modal").show(), fetchAll(t), $(".suggestions").remove() })); var fbAppID = localStorage.getItem("_fbAppId"); function FBShareOp(e) { var t = e.city, n = void 0 === t ? "null" : t, o = e.humidity, i = void 0 === o ? "null" : o, r = e.windSpeed, a = void 0 === r ? "null" : r, c = e.windDirection, u = void 0 === c ? "null" : c, s = e.temp, d = void 0 === s ? "null" : s, l = e.weather, h = void 0 === l ? "null" : l; FB.ui({ method: "share", app_id: fbAppID, redirect_uri: "https://kent2cky.github.io/GeoSearch/", display: "popup", href: "https://kent2cky.github.io/GeoSearch/", quote: "\n                Local weather conditions at " + n + ": \n                Humidity - " + i + ", \n                Wind Speed - " + a + ",\n                Wind Direction - " + u + " \n                Temperature - " + d + ", \n                Current Weather - " + h + "   \n                " }, (function (e) { displayNotification(e ? "Successfully shared to facebook!" : "Facebook share cancelled!") })) } window.fbAsyncInit = function () { FB.init({ appId: fbAppID, status: !0, xfbml: !0 }) }, $(document).on("click", "#fb-share", (function () { var e = {}; e.city = $("#name-of-place").text(), e.humidity = $("#humidity").text(), e.weather = $("#weather").text(), e.windSpeed = $("#windspeed").text(), e.windDirection = $("#windDirection").text(), e.temp = "" + $("#temperature").text(), FBShareOp(e) })), $(document).ready((function () { TemperatureConverter.getCurrentMetricSystem() || TemperatureConverter.setCurrentMetricSystem("celsius"), localStorage.setItem("_fbAppId", "2698742886856960"), localStorage.setItem("_googleApiKey", "AIzaSyAlJLXsOXejTeu7G6fEvh5d_HK4B8tDAsc"), localStorage.setItem("_hereAppCode", "RReyGHAdvyqxdS3NS_RpSg"), localStorage.setItem("_hereAppId", "GH3eunoNaCk0CltN1nYB"), localStorage.setItem("_openWeatherMapAppId", "a30ca121ed1c4c7c5f67f742615dc20e") })), $(document).on("click", ".btn-back", (function () { $(".suggestions").remove(), $("#search-section").show(), $("#search-results").hide(), $("#mainInput").focus(), $("#map").html(" ") })).on("click", ".btn-close", (function () { $("#modal").hide() })).on("click", "#search", (function () { $(".suggestions").remove(), $("#search-section").show(), $("#search-results").hide(), $("#mainInput").focus(), $("#map").html(" ") })).on("click", "#close-notifier", (function () { $("#modal").hide() }));